# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cadastro_cliente.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector
import pandas as pd
import variaveisControle

host = variaveisControle.host
user = variaveisControle.user
password = variaveisControle.password
database = variaveisControle.database

class Ui_formDadosClientes(object):
    def setupUi(self, formDadosClientes):
        formDadosClientes.setObjectName("formDadosClientes")
        formDadosClientes.resize(313, 210)
        self.ld_nome = QtWidgets.QLabel(formDadosClientes)
        self.ld_nome.setGeometry(QtCore.QRect(20, 10, 55, 16))
        self.ld_nome.setObjectName("ld_nome")
        self.txt_nome = QtWidgets.QLineEdit(formDadosClientes)
        self.txt_nome.setGeometry(QtCore.QRect(80, 10, 191, 16))
        self.txt_nome.setObjectName("txt_nome")
        self.txt_telefone = QtWidgets.QLineEdit(formDadosClientes)
        self.txt_telefone.setGeometry(QtCore.QRect(80, 50, 191, 16))
        self.txt_telefone.setObjectName("txt_telefone")
        self.txt_cidade = QtWidgets.QLineEdit(formDadosClientes)
        self.txt_cidade.setGeometry(QtCore.QRect(80, 90, 191, 16))
        self.txt_cidade.setObjectName("txt_cidade")
        self.lb_telefone = QtWidgets.QLabel(formDadosClientes)
        self.lb_telefone.setGeometry(QtCore.QRect(20, 50, 55, 16))
        self.lb_telefone.setObjectName("lb_telefone")
        self.lb_cidade = QtWidgets.QLabel(formDadosClientes)
        self.lb_cidade.setGeometry(QtCore.QRect(20, 90, 55, 16))
        self.lb_cidade.setObjectName("lb_cidade")
        self.btn_cadastrar = QtWidgets.QPushButton(formDadosClientes)
        self.btn_cadastrar.setGeometry(QtCore.QRect(200, 130, 61, 51))
        self.btn_cadastrar.setStyleSheet("image: url(:/icon_cadastrar/icons/cadastrar.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_cadastrar.setText("")
        self.btn_cadastrar.setObjectName("btn_cadastrar")
        self.btn_cancelar = QtWidgets.QPushButton(formDadosClientes)
        self.btn_cancelar.setGeometry(QtCore.QRect(90, 130, 61, 51))
        self.btn_cancelar.setStyleSheet("image: url(:/icon_cancelar/icons/cancelar.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_cancelar.setText("")
        self.btn_cancelar.setObjectName("btn_cancelar")

        self.retranslateUi(formDadosClientes)
        QtCore.QMetaObject.connectSlotsByName(formDadosClientes)

    def retranslateUi(self, formDadosClientes):
        _translate = QtCore.QCoreApplication.translate
        formDadosClientes.setWindowTitle(_translate("formDadosClientes", "Form"))
        self.ld_nome.setText(_translate("formDadosClientes", "Nome"))
        self.lb_telefone.setText(_translate("formDadosClientes", "Telefone:"))
        self.lb_cidade.setText(_translate("formDadosClientes", "Cidade:"))
        
        #Botões sistema
        self.btn_cancelar.clicked.connect(lambda: self.sairTela(formDadosClientes))
        if variaveisControle.tipoTelaDadosCliente == 'incluir':
             self.btn_cadastrar.clicked.connect(self.cadastrarCliente)
             
        
        # Condições da tela
        #Tipo da tela
        if variaveisControle.tipoTelaDadosCliente == 'incluir':
            self.txt_nome.setEnabled(True)
            self.txt_telefone.setEnabled(True)
            self.txt_cidade.setEnabled(True)
            self.btn_cadastrar.setEnabled(True)
        elif variaveisControle.tipoTelaDadosCliente == 'consultar':
            self.txt_nome.setEnabled(False)
            self.txt_telefone.setEnabled(False)
            self.txt_cidade.setEnabled(False)
            self.btn_cadastrar.setEnabled(False)
            #conexão com o BD
            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
            )
            mycursor = mydb.cursor()
            consultaSql = "SELECT * FROM cliente WHERE id = '" + variaveisControle.idConsulta + "'"
            mycursor.execute(consultaSql)
            myresult = mycursor.fetchall()
            mycursor.close()
            #Converte resultados BD para DataFrame
            df = pd.DataFrame(myresult, columns = ['ID', 'Nome', 'Telefone', 'Cidade'])
            nomeCliente = df['Nome'][0]
            telefoneCliente = df['Telefone'][0]
            cidadeCliente = df['Cidade'][0]
            #Seta variaveis na tela do sistema
            self.txt_nome.setText(nomeCliente)
            self.txt_telefone.setText(telefoneCliente)
            self.txt_cidade.setText(cidadeCliente)
            
    ## Funções sistema ##
    # Cadastrar cliente
    def cadastrarCliente(self):
            nomeCliente = self.txt_nome.text()
            telefoneCliente = self.txt_telefone.text()
            cidadeCliente = self.txt_cidade.text()
            
            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
        )
            mycursor = mydb.cursor()
            
            sql = "INSERT INTO cliente (nomeCliente, TelefoneCliente, CidadeCliente) values(%s, %s, %s)"
            val = (nomeCliente, telefoneCliente, cidadeCliente)

            mycursor.execute(sql,val)
            mydb.commit()
            mycursor.close()
            self.txt_nome.setText("")
            self.txt_telefone.setText("")
            self.txt_cidade.setText("")
            
    ## Sair da tela
    def sairTela(self, formDadosClientes):
        variaveisControle.tipoTelaDadosCliente == ''
        formDadosClientes.close()
        
           
        
        
        
        
        
import icon_cadastrar
import icon_cancelar


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    formDadosClientes = QtWidgets.QWidget()
    ui = Ui_formDadosClientes()
    ui.setupUi(formDadosClientes)
    formDadosClientes.show()
    sys.exit(app.exec_())
