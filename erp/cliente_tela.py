# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cliente_tela.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QFileDialog, QTableWidget, QTableWidgetItem
import mysql.connector
import pandas as pd
import variaveisControle
from cadastro_cliente import Ui_formDadosClientes

### Conexão com o BD ###
host = variaveisControle.host
user = variaveisControle.user
password = variaveisControle.password
database = variaveisControle.database
class Ui_form_cliente(object):
    def setupUi(self, form_cliente):
        form_cliente.setObjectName("form_cliente")
        form_cliente.resize(518, 388)
        self.btn_add = QtWidgets.QPushButton(form_cliente)
        self.btn_add.setGeometry(QtCore.QRect(0, 0, 61, 61))
        self.btn_add.setStyleSheet("image: url(:/icon_add/icons/adicionar.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_add.setText("")
        self.btn_add.setObjectName("btn_add")
        self.btn_alterar = QtWidgets.QPushButton(form_cliente)
        self.btn_alterar.setGeometry(QtCore.QRect(60, 0, 61, 61))
        self.btn_alterar.setStyleSheet("image: url(:/icon_alterar/icons/alterar.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_alterar.setText("")
        self.btn_alterar.setObjectName("btn_alterar")
        self.btn_consultar = QtWidgets.QPushButton(form_cliente)
        self.btn_consultar.setGeometry(QtCore.QRect(120, 0, 61, 61))
        self.btn_consultar.setStyleSheet("image: url(:/icon_consultar/icons/consultar.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_consultar.setText("")
        self.btn_consultar.setObjectName("btn_consultar")
        self.btn_excluir = QtWidgets.QPushButton(form_cliente)
        self.btn_excluir.setGeometry(QtCore.QRect(180, 0, 61, 61))
        self.btn_excluir.setStyleSheet("image: url(:/icon_excluir/icons/excluir.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_excluir.setText("")
        self.btn_excluir.setObjectName("btn_excluir")
        self.btn_retornar = QtWidgets.QPushButton(form_cliente)
        self.btn_retornar.setGeometry(QtCore.QRect(450, 0, 61, 61))
        self.btn_retornar.setStyleSheet("image: url(:/icon_return/icons/retornar.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_retornar.setText("")
        self.btn_retornar.setObjectName("btn_retornar")
        self.btn_pesquisar = QtWidgets.QPushButton(form_cliente)
        self.btn_pesquisar.setGeometry(QtCore.QRect(410, 100, 31, 21))
        self.btn_pesquisar.setStyleSheet("image: url(:/icon_pesquisa/icons/pesquisar.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_pesquisar.setText("")
        self.btn_pesquisar.setObjectName("btn_pesquisar")
        self.btn_filtro = QtWidgets.QPushButton(form_cliente)
        self.btn_filtro.setGeometry(QtCore.QRect(450, 100, 31, 21))
        self.btn_filtro.setStyleSheet("image: url(:/icon_filtro/icons/filtro.png);\n"
"background-color: qradialgradient(spread:pad,cx:0.5,cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop: 0 rgba(255,255,255,0));")
        self.btn_filtro.setText("")
        self.btn_filtro.setObjectName("btn_filtro")
        self.tb_cliente = QtWidgets.QTableWidget(form_cliente)
        self.tb_cliente.setGeometry(QtCore.QRect(10, 140, 501, 231))
        self.tb_cliente.setObjectName("tb_cliente")
        self.tb_cliente.setColumnCount(4)
        self.tb_cliente.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tb_cliente.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_cliente.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_cliente.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_cliente.setHorizontalHeaderItem(3, item)
        self.lb_nomeCliente = QtWidgets.QLabel(form_cliente)
        self.lb_nomeCliente.setGeometry(QtCore.QRect(80, 100, 61, 20))
        self.lb_nomeCliente.setObjectName("lb_nomeCliente")
        self.txt_cliente = QtWidgets.QLineEdit(form_cliente)
        self.txt_cliente.setGeometry(QtCore.QRect(160, 102, 231, 20))
        self.txt_cliente.setObjectName("txt_cliente")

        self.retranslateUi(form_cliente)
        QtCore.QMetaObject.connectSlotsByName(form_cliente)

    def retranslateUi(self, form_cliente):
        _translate = QtCore.QCoreApplication.translate
        form_cliente.setWindowTitle(_translate("form_cliente", "Form"))
        item = self.tb_cliente.horizontalHeaderItem(0)
        item.setText(_translate("form_cliente", "ID"))
        item = self.tb_cliente.horizontalHeaderItem(1)
        item.setText(_translate("form_cliente", "Nome"))
        item = self.tb_cliente.horizontalHeaderItem(2)
        item.setText(_translate("form_cliente", "Telefone"))
        item = self.tb_cliente.horizontalHeaderItem(3)
        item.setText(_translate("form_cliente", "Cidade"))
        self.lb_nomeCliente.setText(_translate("form_cliente", "Nome Cliente"))
        
        ##Botões sistema##
        self.btn_retornar.clicked.connect(lambda: self.sairTela(form_cliente))
        self.btn_filtro.clicked.connect(self.consultarGeral)
        self.btn_pesquisar.clicked.connect(self.pesquisarCliente)
        self.btn_add.clicked.connect(self.cadastrarCliente)
        self.btn_consultar.clicked.connect(self.consultarCliente)
        
        
        
        
        ##Funcões sistema
   #Fechar tela cliente
    def sairTela(self, form_cliente):
        print('fechando tela cliente')
        form_cliente.close()

   
   #Consultar clientes
    def consultarGeral(self):
        print('consultando clientes')
        mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
        )
        mycursor = mydb.cursor()
        mycursor.execute('SELECT * FROM cliente')
        myresult = mycursor.fetchall()
        df = pd.DataFrame(myresult, columns = ['ID', 'Nome', 'Telefone', 'Cidade'])
        self.all_data = df
        
        # Carregar arquivo na tabela tb_cliente
        numRows = len(self.all_data.index)
        self.tb_cliente.setColumnCount(len(self.all_data.columns))
        self.tb_cliente.setRowCount(numRows)
        self.tb_cliente.setHorizontalHeaderLabels(self.all_data.columns)
        
        for i in range(numRows):
                for j in range(len(self.all_data.columns)):
                        self.tb_cliente.setItem(i,j, QTableWidgetItem(str(self.all_data.iat[i,j])))
        
        self.tb_cliente.resizeColumnsToContents()
        self.tb_cliente.resizeRowsToContents

        mycursor.close()

   # Pesquisar por nome do cliente
    def pesquisarCliente(self):
            print('consultando clientes')
            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
        )
            mycursor = mydb.cursor()
            nomeConsulta = self.txt_cliente.text()
            consultaSql = "SELECT * FROM cliente WHERE nomeCliente LIKE '" + nomeConsulta + "%'"
            mycursor.execute(consultaSql)
            myresult = mycursor.fetchall()
            df = pd.DataFrame(myresult, columns = ['ID', 'Nome', 'Telefone', 'Cidade'])
            self.all_data = df
        
        # Carregar arquivo na tabela tb_cliente
            numRows = len(self.all_data.index)
            self.tb_cliente.setColumnCount(len(self.all_data.columns))
            self.tb_cliente.setRowCount(numRows)
            self.tb_cliente.setHorizontalHeaderLabels(self.all_data.columns)
        
            for i in range(numRows):
                for j in range(len(self.all_data.columns)):
                        self.tb_cliente.setItem(i,j, QTableWidgetItem(str(self.all_data.iat[i,j])))
        
            self.tb_cliente.resizeColumnsToContents()
            self.tb_cliente.resizeRowsToContents

            mycursor.close()

  # Cadastrar Cliente
    def cadastrarCliente(self):
        variaveisControle.tipoTelaDadosCliente = 'incluir'
        print('formCliente: ', variaveisControle.tipoTelaDadosCliente)
        self.formDadosClientes = QtWidgets.QWidget()
        self.ui = Ui_formDadosClientes()
        self.ui.setupUi(self.formDadosClientes)
        self.formDadosClientes.show()
        
   # Consultar cliente
    def consultarCliente(self):
        #Tipo tela consultarCliente
        variaveisControle.tipoTelaDadosCliente = 'consultar'
        print('formCliente: ', variaveisControle.tipoTelaDadosCliente)
        #ID cliente para consulta
        line = self.tb_cliente.currentRow()
        item = self.tb_cliente.item(line, 0)
        variaveisControle.idConsulta = item.text()
        # Abertura da Tela consultarCliente
        self.formDadosClientes = QtWidgets.QWidget()
        self.ui = Ui_formDadosClientes()
        self.ui.setupUi(self.formDadosClientes)
        self.formDadosClientes.show()
        
       




import adicionar_icon
import icon_alterar
import icon_consultar
import icon_excluir
import icon_filtro
import icon_pesquisa
import icon_return


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    form_cliente = QtWidgets.QWidget()
    ui = Ui_form_cliente()
    ui.setupUi(form_cliente)
    form_cliente.show()
    sys.exit(app.exec_())
